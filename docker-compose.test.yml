# docker-compose.test.yml - Docker Compose configuration for E2E testing

services:
  migrate-test:
    build: .
    environment:
      - DB_HOST=db-test
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=stage-zero-db-test
      - DB_PORT=5432
      - JWT_SECRET=test-jwt-secret-for-e2e-testing-only
    depends_on:
      db-test:
        condition: service_healthy
    command: [ "./migrate", "up" ]
    restart: "no"

  app-test:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVICE_NAME=stage-zero-test
      - SERVICE_VERSION=test
      - SERVICE_PORT=8080
      - DB_HOST=db-test
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=stage-zero-db-test
      - DB_PORT=5432
      - JWT_SECRET=test-jwt-secret-for-e2e-testing-only
      - ENABLE_STDOUT=true
      - ENABLE_OTLP=false
    depends_on:
      db-test:
        condition: service_healthy
      migrate-test:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  db-test:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stage-zero-db-test
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_test_data:
